#!/bin/bash
# rc.local is run as root on every boot, before any user login
# https://askubuntu.com/questions/156771/run-a-script-only-at-the-very-first-boot

# Conditionally trigger debugging output
if [[ -e /var/local/status/verbose/rc.local ]]; then
    set -x && set -v
    exec > >(tee -i /var/local/status/verbose/rc.local.log)
    exec 2>&1
fi

BOOT_FIRST_FLAG="/var/local/status/boot_first.flag"

if [ ! -e $BOOT_FIRST_FLAG ]; then # machine's first-ever boot
    # (or, signal detected to rerun as-if first boot by deleting ~/.boot_first)
    
    # if previous runs have signaled completion of other steps, remove those signals
    # To rerun everything on reboot, "rm -f /var/local/status/boot_first.flag"
    [[ -e /var/local/status/finished-software-install.flag ]] && rm -f /var/local/status/finished-software-install.flag
    [[ -e /home/econ-ark/.gui_user_login_first.flag  ]]    && rm -f /home/econ-ark/.gui_user_login_first.flag*
    [[ -e /home/econ-ark/.gui_user_login_second.flag ]]    && rm -f /home/econ-ark/.gui_user_login_second.flag*
    [[ -e /var/local/status/boot_second.flag ]]      && rm -f /var/local/status/boot_second.flag

    # Some virtual machines need to have lightdm stopped and then restarted
    [[ "$(lscpu | grep -i hypervisor)" != "" ]] && service lightdm stop && service lightdm start
    # create an empty 'signal' file so the "if" will fail after the first boot
    touch "$BOOT_FIRST_FLAG"
fi

BOOT_SECOND_FLAG="/var/local/status/boot_second.flag" 

if [ ! -e "$BOOT_SECOND_FLAG" ] || [ ! -f /var/local/status/finished-software-install.flag ]; then
    # Haven't finished installation yet
    (/var/local/finish.sh |& tee -a /var/local/status/start-and-finish.log |& tee /var/local/status/finish.log ) &
    
    # Restore cron jobs so they will run in background on next boot
    # (They were disabled in start.sh because they take forever and delay the first boot inordinately)
    [[ -e /etc/cron.hourly/jobs.deny ]] && sudo rm /etc/cron.hourly/jobs.deny
    
    # Create an empty 'signal' flag file 
    touch "$BOOT_SECOND_FLAG"
fi # End second-boot setups

# Run these at the beginning of EVERY boot from the very first one
sudo rm -f /var/crash/*blue* # Bluetooth crashes frequently and uselessly
sudo systemctl restart avahi-daemon

# .first_interactive_shell.flag is deleted after first interactive shell is executed
# permits special messages only at startup of machine
[[ -e /home/econ-ark/.first_interactive_shell.flag ]] && sudo rm /home/econ-ark/.first_interactive_shell.flag

exit 0
